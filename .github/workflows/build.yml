name: Generate android and iOS build

on:
  schedule:
    - cron: "00 17 01 * *" # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  android_build:
    name: Generate android build
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Generate android apk
        run: |
          npm install
          cd android
          java --version
          "$(pwd)/gradlew" assembleRelease
          find $PWD -type f | grep "app-release.apk"
          ls -la $(pwd)/app/build/outputs/apk/release #/app-release.apk
          find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
      - name: Check Build Path
        run: |
          ls -la "$(pwd)"
          find $PWD -type f | grep "app-release.apk"    
      - uses: actions/upload-artifact@v4
        with:
          name: Build-Artifact
          path: "app/build/outputs/apk/release/app-release.apk"
          
  
  ios_build:
    name: Generate iOS simulator build
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Generate iOS Simulator build
        run: |
          npm install && cd ios && pod install
          xcodebuild -sdk iphonesimulator -configuration Debug -workspace "Bitrise.xcworkspace" -scheme "Bitrise" -derivedDataPath $(pwd)
          # xcodebuild -sdk iphoneos -configuration Debug -workspace AzurePipeline.xcworkspace -scheme AzurePipeline build -verbose -skipMacroValidation
          
